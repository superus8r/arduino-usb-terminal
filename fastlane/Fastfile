# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:android)

platform :android do

  desc "Runs all the tests"
  lane :run_unit_tests do
    gradle(task: "testDebugUnitTest --stacktrace")
  end

  desc "Runs all the tests with coverage"
  lane :testDev do
    gradle(task: "generateKsPropFile generateGoogleServicesJson pixel2api30DebugAndroidTest testDebugUnitTest jacocoTestReport --stacktrace")
  end

  desc "Deploy to Firebase AppTester channel"
  lane :distDev do
    gradle(tasks: [
        "generateKsPropFile",
        "generateGoogleServicesJson",
        "generateAppDistKey",
        "clean",
        "assembleDebug"
    ])
    firebase_app_distribution(
        service_credentials_file: ENV['APP_DIST_SERVICE_ACCOUNT_PATH'],
        app: "1:1032339097117:android:1e333da555ec74a71668f4",
        groups: "testers",
        release_notes: "",
    )
  end

  desc "Submit a new Beta Build to Crashlytics Beta"
  lane :beta do
    gradle(task: "clean assembleRelease")
    crashlytics
  
    # sh "your_script.sh"
    # You can also use other beta testing services here
  end

  desc "Deploy a new version to the Google Play"
  lane :deploy do
    gradle(
        task: 'bundle',
        build_type: 'Release'
    )
    upload_to_play_store(
             track: 'internal',
             release_status: 'draft',
             aab: './app/build/outputs/bundle/release/app-release.aab',
             skip_upload_apk: 'true',
             skip_upload_metadata: 'true',
             skip_upload_changelogs: 'true',
             skip_upload_images: 'true',
             skip_upload_screenshots: 'true',
             json_key: ENV['SERVICE_ACCOUNT_USB_TERMINAL_PLAY_STORE']
    )
#     upload_to_play_store_internal_app_sharing(
#         aab: './app/build/outputs/bundle/release/app-release.aab',
#         json_key: ENV['SERVICE_ACCOUNT_USB_TERMINAL_PLAY_STORE']
#     )
  end
end
