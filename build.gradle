buildscript {
    ext {
        coroutines_version = "1.6.4"
        firebase_bom_version = "32.8.0"
        hilt_version = "2.56.2"
        jacoco_version = "0.8.8"
        kotlin_version = "2.1.20"
        material_version = "1.12.0"
        mockk_version = "1.14.2"
    }
    dependencies {
        classpath "com.google.dagger:hilt-android-gradle-plugin:$hilt_version"
        classpath "com.google.gms:google-services:4.4.1"
        classpath "com.google.firebase:firebase-crashlytics-gradle:2.9.9"
    }
}

plugins {
    id("com.android.application") version '8.10.0' apply false
    id("org.jetbrains.kotlin.android") version "2.1.20" apply false
    id("org.jetbrains.kotlin.plugin.compose") version "2.1.20"
    id("org.sonarqube") version "3.5.0.2730"
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

sonarqube {
    properties {
        property("sonar.organization", "superus8r")
        property("sonar.projectKey", "superus8r_arduino-usb-terminal")
        property("sonar.projectName", "arduino-usb-terminal")
        property("sonar.sourceEncoding", "UTF-8")
        property("sonar.host.url", "https://sonarcloud.io")

        // sonar requires relative path for sources and binaries
        property("sonar.sources", "/app/src/main/java")
        property("sonar.binaries", "/app/build/tmp/kotlin-classes/debug")
        // sonar requires absolute path for lint and jacoco reports!
        property("sonar.androidLint.reportPaths", "${layout.buildDirectory}/reports/lint-results-debug.xml")
        property("sonar.coverage.jacoco.xmlReportPaths", "${layout.buildDirectory}/app/build/mergedReportDir/jacocoTestReport/jacocoTestReport.xml")
    }
}