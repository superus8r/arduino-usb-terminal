version: 2.1
orbs:
  codecov: codecov/codecov@3.2.4
  ruby: circleci/ruby@2.0.0

commands:
  restore_gradle_cache:
    steps:
      - restore_cache:
          key: v1-gradle-wrapper-{{ arch }}-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}
      - restore_cache:
          key: v1-gradle-cache-{{ arch }}-{{ checksum "build.gradle" }}

  save_gradle_cache:
    steps:
      - save_cache:
          paths:
            - ~/.gradle/wrapper
          key: v1-gradle-wrapper-{{ arch }}-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}
      - save_cache:
          paths:
            - ~/.gradle/caches
          key: v1-gradle-cache-{{ arch }}-{{ checksum "build.gradle" }}

executors:
  android-machine:
    machine:
      image: android:2024.01.1
  android-docker:
    docker:
      - image: cimg/android:2024.01

jobs:
  android-test:
    executor: android-machine
    resource_class: large
    steps:
      - checkout
      - restore_gradle_cache
      - ruby/install-deps:
          with-cache: true
      - run:
          name: Fastlane - run all tests with coverage report
          command: |
            bundle exec fastlane testDev
      - save_gradle_cache
      - run:
          name: Analyze on SonarCloud
          command: ./gradlew lintDebug sonar
      - codecov/upload:
          file: app/build/mergedReportDir/jacocoTestReport/jacocoTestReport.xml
      - store_test_results:
          path: app/build/test-results/testDebugUnitTest
      - store_artifacts:
          path: app/build/mergedReportDir

  distribute-dev:
    executor: android-docker
    resource_class: large
    steps:
      - checkout
      - restore_gradle_cache
      - run:
          name: Prepare Fastlane
          command: sudo bundle update
      - run:
          name: Distribute to Firebase AppTester
          command: bundle exec fastlane distDev
      - store_artifacts:
          path: /home/circleci/project/app/build/outputs/apk/debug/app-debug.apk
          destination: fastlane-output-debug

  distribute-internal-testing:
    executor: android-docker
    resource_class: large
    steps:
      - checkout
      - restore_gradle_cache
      - run:
          name: Prepare Fastlane
          command: sudo bundle update
      - run:
          name: Distribute to Firebase AppTester
          command: bundle exec fastlane deploy
      - store_artifacts:
          path: /home/circleci/project/app/build/outputs/bundle/release/app-release.aab
          destination: fastlane-output-release

workflows:
  workflow:
    jobs:
      - android-test:
          context: SonarCloud
      - distribute-dev
